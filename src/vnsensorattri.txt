
VnSensor Objects

class vnpy.VnSensor

    Helpful class for working with VectorNav sensors.

Class attributes are:

VnSensor.baudrate

    Baud rate of the serial port connection. Note this is independent of the sensor’s on-board serial baud rate setting.

VnSensor.is_connected

    Indicates if the VnSensor is connected.

VnSensor.response_timeout_ms

    The amount of time in milliseconds to wait for a response during read/write operations with the sensor.

VnSensor.retransmit_delay_ms

    The delay in milliseconds between retransmitting commands.

VnSensor.send_error_detection_mode

    The error detection mode used for commands sent to the sensor. Default is CHECKSUM.

VnSensor.port

    Name of the port the sensor is connected to.

Class methods are:

VnSensor.acceleration_disturbance_present(disturbance_present)

    Command to inform the VectorNav Sensor if there is an acceleration disturbance present. Set disturbance_present to True when a disturbance is present. Set it to False when the disturbance is gone.

VnSensor.change_baudrate(baudrate)

    Issues a change baudrate to the VectorNav sensor and then reconnects the attached serial port at the new baudrate.

VnSensor.connect(port, baudrate)

    Connects to a VectorNav sensor on the provided port and baudrate.

VnSensor.determine_device_family()

    This method will query the attached sensor and determine the device family it belongs to.

VnSensor.disconnect()

    Disconnects from the VectorNav sensor.

VnSensor.magnetic_disturbance_present(disturbance_present)

    Command to inform the VectorNav Sensor if there is a magnetic disturbance present. Set disturbance_present to True when a disturbance is present. Set it to False when the disturbance is gone.

VnSensor.read_acceleration_compensation()

    Reads the Acceleration Compensation register.

VnSensor.read_acceleration_measurements()

    Reads the Acceleration Measurements register.

VnSensor.read_angular_rate_measurements()

    Reads the Angular Rate Measurements register.

VnSensor.read_async_data_output_frequency(port=None)

    Reads the Async Data Output Frequency register.

VnSensor.read_async_data_output_type(port=None)

    Reads the Async Data Output Type register.

VnSensor.read_attitude_quaternion()

    Reads the Attitude Quaternion register.

VnSensor.read_binary_output_1()

VnSensor.read_binary_output_2()

VnSensor.read_binary_output_3()

    Reads the Binary Output 1/2/3 register.

VnSensor.read_calculated_magnetometer_calibration()

    Reads the Calculated Magnetometer Calibration register.

VnSensor.read_communication_protocol_control()

    Reads the Communication Protocol Control register.

VnSensor.read_delta_theta_and_delta_velocity()

    Reads the Delta Theta and Delta Velocity register.

VnSensor.read_delta_theta_and_delta_velocity_configuration(fields)

VnSensor.read_delta_theta_and_delta_velocity_configuration(integration_frame, gyro_compensation, accel_compensation)

    Writes to the Delta Theta and Delta Velocity Configuration register.

VnSensor.read_filter_measurements_variance_parameters()

    Reads the Filter Measurements Variance Parameters register.

VnSensor.read_filter_active_tuning_parameters()

    Reads the Filter Active Tuning Parameters register.

VnSensor.read_filter_basic_control()

    Reads the Filter Basic Control register.

VnSensor.read_filter_startup_gyro_bias()

    Reads the Filter Startup Gyro Bias register.

VnSensor.read_firmware_version()

    Reads the Firmware Version register.

VnSensor.read_gps_antenna_offset()

    Reads the GPS Antenna Offset register.

VnSensor.read_gps_compass_baseline()

    Reads the GPS Compass Baseline register.

VnSensor.read_gps_compass_estimated_baseline()

    Reads the GPS Compass Estimated Baseline register.

VnSensor.read_gps_configuration()

    Reads the GPS Configuration register.

VnSensor.read_gps_solution_ecef()

    Reads the GPS Solution - ECEF register.

VnSensor.read_gps_solution_lla()

    Reads the GPS Solution - LLA register.

VnSensor.read_gyro_compensation()

    Reads the Gyro Compensation register.

VnSensor.read_hardware_revision()

    Reads the Hardware Revision register.

VnSensor.read_imu_filtering_configuration()

    Reads the IMU Filtering Configuration register.

VnSensor.read_imu_measurements()

    Reads the IMU Measurements register.

VnSensor.read_imu_rate_configuration()

    Reads the IMU Rate Configuration register.

VnSensor.read_indoor_heading_mode_control()

    Reads the Indoor Heading Mode Control register.

VnSensor.read_ins_advanced_configuration()

    Reads the INS Advanced Configuration register.

VnSensor.read_ins_basic_configuration_vn200()

    Reads the INS Basic Configuration register for a VN-200 sensor.

VnSensor.read_ins_basic_configuration_vn300()

    Reads the INS Basic Configuration register for a VN-300 sensor.

VnSensor.read_ins_solution_ecef()

    Reads the INS Solution - ECEF register.

VnSensor.read_ins_solution_lla()

    Reads the INS Solution - LLA register.

VnSensor.read_ins_state_ecef()

    Reads the INS State - ECEF register.

VnSensor.read_ins_state_lla()

    Reads the INS State - LLA register.

VnSensor.read_magnetic_acceleration_and_angular_rates()

    Reads the Magnetic, Acceleration and Angular Rates register.

VnSensor.read_magnetic_and_gravity_reference_vectors()

    Reads the Magnetic and Gravity Reference Vectors register.

VnSensor.read_magnetic_measurements()

    Reads the Magnetic Measurements register.

VnSensor.read_magnetometer_calibration_control()

    Reads the Magnetometer Calibration Control register.

VnSensor.read_magnetometer_compensation()

    Reads the Magnetometer Compensation register.

VnSensor.read_model_number()

    Reads the Model Number register.

VnSensor.read_quaternion_magnetic_acceleration_and_angular_rates()

    Reads the Quaternion, Magnetic, Acceleration and Angular Rates register.

VnSensor.read_reference_frame_rotation()

    Reads the Reference Frame Rotation register.

VnSensor.read_reference_vector_configuration()

    Reads the Reference Vector Configuration register.

VnSensor.read_serial_baudrate(port=None)

    Reads the Serial Baud Rate register for the specified port.

VnSensor.read_serial_number()

    Reads the Serial Number register.

VnSensor.read_startup_filter_bias_estimate()

    Reads the Startup Filter Bias Estimate register.

VnSensor.read_synchronization_control()

    Reads the Synchronization Control register.

VnSensor.read_synchronization_status()

    Reads the Synchronization Status register.

VnSensor.read_user_tag()

    Reads the User Tag register.

VnSensor.read_velocity_compensation_control()

    Reads the Velocity Compensation Control register.

VnSensor.read_velocity_compensation_measurement()

    Reads the Velocity Compensation Measurement register.

VnSensor.read_velocity_compensation_status()

    Reads the Velocity Compensation Status register.

VnSensor.read_vpe_basic_control()

    Reads the VPE Basic Control register.

VnSensor.read_vpe_accelerometer_advanced_tuning()

    Reads the VPE Accelerometer Advanced Tuning register.

VnSensor.read_vpe_accelerometer_basic_tuning()

    Reads the VPE Accelerometer Basic Tuning register.

VnSensor.read_vpe_gyro_basic_tuning()

    Reads the VPE Gryo Basic Tuning register.

VnSensor.read_vpe_magnetometer_advanced_tuning()

    Reads the VPE Magnetometer Advanced Tuning register.

VnSensor.read_vpe_magnetometer_basic_tuning()

    Reads the VPE Magnetometer Basic Tuning register.

VnSensor.read_yaw_pitch_roll()

    Reads the Yaw Pitch Roll register.

VnSensor.read_yaw_pitch_roll_magnetic_acceleration_and_angular_rates()

    Reads the Yaw, Pitch, Roll, Magnetic, Acceleration and Angular Rates register.

VnSensor.read_yaw_pitch_roll_true_body_acceleration_and_angular_rates_register()

    Reads the Yaw, Pitch, Roll, True Body Acceleration and Angular Rates register.

VnSensor.read_yaw_pitch_roll_true_inertial_acceleration_and_angular_rates_register()

    Reads the Yaw, Pitch, Roll, True Inertial Acceleration and Angular Rates register.

VnSensor.reset()

    Issues a Reset command to the VectorNav sensor.

VnSensor.restore_factory_settings()

    Issues a Restore Factory Settings command to the VectorNav sensor.

VnSensor.set_gyro_bias()

    Issues a command to the VectorNav Sensor to set the gyro’s bias.

classmethod VnSensor.supported_baudrates()

    The list of baud rates supported by VectorNav sensors.

VnSensor.tare()

    Issues a tare command to the VectorNav Sensor.

VnSensor.transaction(send)

    Sends the provided command and returns the response from the sensor.

    If the command does not have an asterisk ‘*’, then a checksum will be performed and appended based on the current error detection mode. Also, if the line-ending \r\n is not present, these will be added also.

VnSensor.verify_sensor_connectivity()

    Checks if we are able to send and receive communication with a sensor.

VnSensor.write_acceleration_compensation(fields)

VnSensor.write_acceleration_compensation(c, b)

    Writes to the Acceleration Compensation register.

VnSensor.write_async_data_output_frequency(adof, port=None)

    Writes to the Async Data Output Frequency register.

VnSensor.write_async_data_output_type(ador, port=None)

    Writes to the Async Data Output Type register.

VnSensor.write_binary_output_1(fields)

VnSensor.write_binary_output_2(fields)

VnSensor.write_binary_output_3(fields)

    Writes to the Binary Output 1/2/3 register.

VnSensor.write_communication_protocol_control(fields)

VnSensor.write_communication_protocol_control(serial_count, serial_status, spi_count, spi_status, serial_checksum, spi_checksum, error_mode)

    Writes to the Communication Protocol Control register.

VnSensor.write_filter_active_tuning_parameters(fields)

VnSensor.write_filter_active_tuning_parameters(magnetic_disturbance_gain, acceleration_disturbance_gain, magnetic_disturbance_memory, acceleration_disturbance_memory)

    Writes to the Filter Active Tuning Parameters register.

VnSensor.write_filter_basic_control(fields)

VnSensor.write_filter_basic_control(mag_mode, ext_mag_mode, ext_acc_mode, ext_gyro_mode, gyro_limit)

    Writes to the Filter Basic Control register.

VnSensor.write_filter_measurements_variance_parameters(fields)

VnSensor.write_filter_measurements_variance_parameters(angular_walk_variance, angular_rate_variance, magnetic_variance, acceleration_variance)

    Writes to the Filter Measurements Variance Parameters register.

VnSensor.write_filter_startup_gyro_bias(bias)

    Writes to the Filter Startup Gyro Bias register.

VnSensor.write_gps_antenna_offset(position)

    Writes to the GPS Antenna Offset register.

VnSensor.write_gps_compass_baseline(fields)

VnSensor.write_gps_compass_baseline(position, uncertainty)

    Writes to the GPS Compass Baseline register.

VnSensor.write_gps_configuration(fields)

VnSensor.write_gps_configuration(mode, pps_source)

    Writes to the GPS Configuration register.

VnSensor.write_gyro_compensation(fields)

VnSensor.write_gyro_compensation(c, b)

    Writes to the Gyro Compensation register.

VnSensor.write_imu_filtering_configuration(fields)

VnSensor.write_imu_filtering_configuration(mag_window_size, accel_window_size, gyro_window_size, temp_window_size, pres_window_size, mag_filter_mode, accel_filter_mode, gyro_filter_mode, temp_filter_mode, pres_filter_mode)

    Writes to the IMU Filtering Configuration register.

VnSensor.write_imu_rate_configuration(fields)

VnSensor.write_imu_rate_configuration(imu_rate, nav_divisor, filter_target_rate, filter_min_rate)

    Writes to the IMU Rate Configuration register.

VnSensor.write_indoor_heading_mode_control(max_rate_error)

    Writes to the Indoor Heading Mode Control register.

VnSensor.write_ins_advanced_configuration(fields)

VnSensor.write_ins_advanced_configuration(use_mag, use_pres, pos_att, vel_att, vel_bias, use_foam, gps_cov_type, vel_count, vel_init, move_origin, gps_timeout, delta_limit_pos, delta_limit_vel, min_pos_uncertainty, min_vel_uncertainty)

    Writes to the INS Advanced Configuration register.

VnSensor.write_ins_basic_configuration_vn200(fields)

VnSensor.write_ins_basic_configuration_vn200(scenario, ahrs_aiding)

    Writes to the INS Basic Configuration register for a VN-200 sensor.

VnSensor.write_ins_basic_configuration_vn300(fields)

VnSensor.write_ins_basic_configuration_vn300(scenario, ahrs_aiding, est_baseline)

    Writes to the INS Basic Configuration register for a VN-300 sensor.

VnSensor.write_magnetic_and_gravity_reference_vectors(fields)

VnSensor.write_magnetic_and_gravity_reference_vectors(mag_ref, acc_ref)

    Writes to the Magnetic and Gravity Reference Vectors register.

VnSensor.write_magnetometer_calibration_control(fields)

VnSensor.write_magnetometer_calibration_control(hsi_mode, hsi_output, converge_rate)

    Writes to the Magnetometer Calibration Control register.

VnSensor.write_magnetometer_compensation(fields)

VnSensor.write_magnetometer_compensation(c, b)

    Writes to the Magnetometer Compensation register.

VnSensor.write_reference_frame_rotation(c)

    Writes to the Reference Frame Rotation register.

VnSensor.write_reference_vector_configuration(fields)

VnSensor.write_reference_vector_configuration(use_mag_model, use_gravity_model, recalc_threshold, year, position)

    Writes to the Reference Vector Configuration register.

VnSensor.write_serial_baudrate(baudrate, port=None)

    Writes to the Serial Baud Rate register for the specified port.

VnSensor.write_settings()

    Issues a Write Settings command to the VectorNav Sensor.

VnSensor.write_startup_filter_bias_estimate(fields)

VnSensor.write_startup_filter_bias_estimate(gyro_bias, accel_bias, pressure_bias)

    Writes to the Startup Filter Bias Estimate register.

VnSensor.write_synchronization_control(fields)

VnSensor.write_synchronization_control(sync_in_mode, sync_in_edge, sync_in_skip_factor, sync_out_mode, sync_out_polarity, sync_out_skip_factor, sync_out_pulse_width)

    Writes to the Synchronization Control register.

VnSensor.write_synchronization_status(fields)

VnSensor.write_synchronization_status(sync_in_count, sync_in_time, sync_out_count)

    Writes to the Synchronization Status register.

VnSensor.write_user_tag(tag)

    Writes to the User Tag register.

VnSensor.write_velocity_compensation_control(fields)

VnSensor.write_velocity_compensation_control(mode, velocity_tuning, rate_tuning)

    Writes to the Velocity Compensation Control register.

VnSensor.write_velocity_compensation_measurement(velocity)

    Writes to the Velocity Compensation Measurement register.

VnSensor.write_vpe_basic_control(fields)

VnSensor.write_vpe_basic_control(enable, heading_mode, filtering_mode, tuning_mode)

    Writes to the VPE Basic Control register.

VnSensor.write_vpe_accelerometer_advanced_tuning(fields)

VnSensor.write_vpe_accelerometer_advanced_tuning(min_filtering, max_filtering, max_adapt_rate, disturbance_window, max_tuning)

    Writes to the VPE Accelerometer Advanced Tuning register.

VnSensor.write_vpe_accelerometer_basic_tuning(fields)

VnSensor.write_vpe_accelerometer_basic_tuning(base_tuning, adaptive_tuning, adaptive_filtering)

    Writes to the VPE Accelerometer Basic Tuning register.

VnSensor.write_vpe_gyro_basic_tuning(fields)

VnSensor.write_vpe_gyro_basic_tuning(angular_walk_variance, base_tuning, adaptive_tuning)

    Writes to the VPE Gryo Basic Tuning register.

VnSensor.write_vpe_magnetometer_advanced_tuning(fields)

VnSensor.write_vpe_magnetometer_advanced_tuning(min_filtering, max_filtering, max_adapt_rate, disturbance_window, max_tuning)

    Writes to the VPE Magnetometer Advanced Tuning register.

VnSensor.write_vpe_magnetometer_basic_tuning(fields)

VnSensor.write_vpe_magnetometer_basic_tuning(base_tuning, adaptive_tuning, adaptive_filtering)

    Writes to the VPE Magnetometer Basic Tuning register.


